{"version":3,"sources":["assets/noPosterSmall.png","Components/Header.js","api.js","Components/Loader.js","Components/Season.js","Components/Production.js","Components/Youtube.js","Routes/Detail/DetailPresenter.js","Routes/Detail/index.js","Routes/Detail/DetailContainer.js","Components/Section.js","Components/Message.js","Components/Poster.js","Routes/Search/SearchPresenter.js","Routes/Search/index.js","Routes/Search/SearchContainer.js","Routes/TV/TVPresenter.js","Routes/TV/index.js","Routes/TV/TVContainer.js","Routes/Home/HomePresenter.js","Routes/Home/index.js","Routes/Home/HomeContainer.js","Components/Router.js","Components/GlobalStyles.js","Components/App.js","index.js"],"names":["Header","styled","header","List","ul","Item","li","props","current","HLink","Link","withRouter","location","pathname","to","api","axios","create","baseURL","params","api_key","language","movieApi","get","id","append_to_response","term","query","tvApi","Container","div","Flex","tab","bgUrl","SeasonNum","span","Season","result","seasons","map","season","poster_path","require","default","season_number","ProInfo","Production","production_companies","company","index","logo_path","name","origin_country","Iframe","iframe","videos","results","length","width","height","src","key","title","frameborder","allow","allowfullscreen","Backdrop","bgImage","Content","Cover","Data","Title","h3","ItemContainer","Divider","IMDB","a","Overview","p","TabBtn","button","TabContainer","DetailPresenter","loading","error","isMovie","useState","setTab","Helmet","Loader","backdrop_path","release_date","substring","first_air_date","runtime","episode_run_time","genres","genre","href","imdb_id","target","overview","onClick","Youtube","DetailContainer","state","includes","this","match","push","history","isNaN","request","data","setState","console","log","React","Component","Grid","Section","children","Text","color","Message","text","Image","Rating","ImageContainer","Year","Poster","imageUrl","rating","year","role","aria-label","Form","form","Input","input","SearchPresenter","movieResults","tvResults","searchTerm","onSubmit","updateTerm","placeholder","value","onChange","movie","vote_average","show","SearchContainer","handleSubmit","e","preventDefault","searchByTerm","TVPresenter","topRated","airingToday","popular","TVContainer","HomePresenter","nowPlaying","upcoming","HomeContainer","path","exact","component","Home","Search","TV","Detail","from","GlobalStyles","createGlobalStyle","reset","App","Router","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mGAAA,OAAe,cAA0B,2C,2OCInCA,GAASC,KAAOC,OAAV,ySAaNC,GAAOF,KAAOG,GAAV,wEAIJC,GAAOJ,KAAOK,GAAV,iKAIqB,SAAAC,GAAK,OAAKA,EAAMC,QAAU,UAAY,iBAG/DC,GAAQR,aAAOS,KAAPT,CAAH,4HAuBIU,iBAhBU,SAAAJ,GAAK,OAC1B,eAACP,GAAD,UACI,gBAACG,GAAD,WACI,eAACE,GAAD,CAAMG,QAAqC,MAA5BD,EAAMK,SAASC,SAA9B,SACI,eAACJ,GAAD,CAAOK,GAAG,IAAV,sBAEJ,eAACT,GAAD,CAAMG,QAAqC,QAA5BD,EAAMK,SAASC,SAA9B,SACI,eAACJ,GAAD,CAAOK,GAAG,MAAV,kBAEJ,eAACT,GAAD,CAAMG,QAAqC,YAA5BD,EAAMK,SAASC,SAA9B,SACI,eAACJ,GAAD,CAAOK,GAAG,UAAV,8B,sCC3CVC,G,QAAMC,EAAMC,OAAO,CACrBC,QAAS,+BACTC,OAAQ,CACJC,QAAS,mCACTC,SAAU,WAILC,GACG,kBAAMP,GAAIQ,IAAI,sBADjBD,GAEC,kBAAMP,GAAIQ,IAAI,mBAFfD,GAGA,kBAAMP,GAAIQ,IAAI,kBAHdD,GAII,SAAAE,GAAE,OAAIT,GAAIQ,IAAJ,gBAAiBC,GAAM,CACtCL,OAAQ,CACJM,mBAAoB,aANnBH,GASK,SAAAI,GAAI,OAAIX,GAAIQ,IAAJ,eAAwB,CAC1CJ,OAAQ,CACJQ,MAAOD,MAINE,GACC,kBAAMb,GAAIQ,IAAI,iBADfK,GAEA,kBAAMb,GAAIQ,IAAI,eAFdK,GAGI,kBAAMb,GAAIQ,IAAI,oBAHlBK,GAIG,SAAAJ,GAAE,OAAIT,GAAIQ,IAAJ,aAAcC,GAAM,CAClCL,OAAQ,CACJM,mBAAoB,aANnBG,GASI,SAAAF,GAAI,OAAIX,GAAIQ,IAAJ,YAAqB,CACtCJ,OAAQ,CACJQ,MAAOD,M,SCjCbG,GAAY5B,KAAO6B,IAAV,gJAQA,qBAAM,eAACD,GAAD,kC,SCNfE,GAAO9B,KAAO6B,IAAV,sEACK,SAAAvB,GAAK,MAAkB,WAAdA,EAAMyB,IAAmB,OAAS,UAGpDH,GAAY5B,KAAO6B,IAAV,mVAKa,SAAAvB,GAAK,OAAIA,EAAM0B,SAOrCC,GAAYjC,KAAOkC,KAAV,kHA4BAC,GArBA,SAAC,GAAD,IAAEC,EAAF,EAAEA,OAAQL,EAAV,EAAUA,IAAV,OACX,eAACD,GAAD,CAAMC,IAAKA,EAAX,SACKK,EAAOC,QAAQC,KAAI,SAACC,GAAD,OAChB,eAAC,GAAD,CACIP,MAAOO,EAAOC,YAAP,yCAE2BD,EAAOC,aAAgBC,EAAQ,IAA+BC,QAHpG,SAII,gBAACT,GAAD,eACMM,EAAOI,yBC/BvBb,GAAO9B,KAAO6B,IAAV,sEACK,SAAAvB,GAAK,MAAkB,eAAdA,EAAMyB,IAAuB,OAAS,UAGxDH,GAAY5B,KAAO6B,IAAV,sYAMa,SAAAvB,GAAK,OAAIA,EAAM0B,SAQrCY,GAAU5C,KAAOkC,KAAV,kHA4BEW,GArBI,SAAC,GAAD,IAAET,EAAF,EAAEA,OAAQL,EAAV,EAAUA,IAAV,OACf,eAAC,GAAD,CAAMA,IAAKA,EAAX,SACKK,EAAOU,qBAAqBR,KAAI,SAAES,EAASC,GAAX,OACjC,eAAC,GAAD,CAEIhB,MAAOe,EAAQE,UAAR,yCAE2BF,EAAQE,WAAcR,EAAQ,IAA+BC,QAJnG,SAKI,gBAACE,GAAD,WACKG,EAAQG,KADb,KACqBH,EAAQI,mBANjC,oBACsBH,UC9BxBpB,GAAY5B,KAAO6B,IAAV,sEACA,SAAAvB,GAAK,MAAkB,YAAdA,EAAMyB,IAAoB,OAAS,UAGrDqB,GAASpD,KAAOqD,OAAV,gDAIG,eAAoB,IAAlBjB,EAAiB,EAAjBA,OAAQL,EAAS,EAATA,IAErB,OACI,eAAC,GAAD,CAAWA,IAAKA,EAAhB,SACKK,EAAOkB,OAAOC,QAAQC,OAAS,EAAIpB,EAAOkB,OAAOC,QAAQjB,KAAI,SAAAF,GAAM,OAChE,eAACgB,GAAD,CACIK,MAAM,MACNC,OAAO,MACPC,IAAG,wCAAmCvB,EAAOwB,KAC7CC,MAAM,uBACNC,YAAY,IACZC,MAAM,2FACNC,iBAAe,OACb,iCCoDhBpC,GAAY5B,KAAO6B,IAAV,6HAMToC,GAAWjE,KAAO6B,IAAV,2RAMc,SAAAvB,GAAK,OAAIA,EAAM4D,WAOrCC,GAAUnE,KAAO6B,IAAV,oEAIPuC,GAAQpE,KAAO6B,IAAV,kNAEiB,SAAAvB,GAAK,OAAIA,EAAM4D,WAOrCG,GAAOrE,KAAO6B,IAAV,uFAKJyC,GAAQtE,KAAOuE,GAAV,mDAGLC,GAAgBxE,KAAO6B,IAAV,kDAGbzB,GAAOJ,KAAOkC,KAAV,2BACJuC,GAAUzE,KAAOkC,KAAV,kDAGPwC,GAAO1E,KAAO2E,EAAV,8DAGJC,GAAW5E,KAAO6E,EAAV,8GAMRC,GAAS9E,KAAO+E,OAAV,weAca,SAAAzE,GAAK,MAAkB,eAAdA,EAAMyB,IAAuB,gBAAkB,UAGxD,SAAAzB,GAAK,MAAkB,YAAdA,EAAMyB,IAAoB,gBAAkB,UAGrD,SAAAzB,GAAK,MAAkB,WAAdA,EAAMyB,IAAmB,gBAAkB,UAGvEiD,GAAehF,KAAO6B,IAAV,kTAkBHoD,GApKS,SAAC,GAAuC,IAAtC7C,EAAqC,EAArCA,OAAe8C,GAAsB,EAA7BC,MAA6B,EAAtBD,SAASE,EAAa,EAAbA,QAAa,EAErCC,mBAAS,cAF4B,oBAEpDtD,EAFoD,KAE/CuD,EAF+C,KAI3D,OAAOJ,EAAU,uCACjB,eAACK,GAAA,EAAD,UACI,6DAEJ,eAACC,GAAD,OAEA,gBAAC,GAAD,WACI,eAACD,GAAA,EAAD,UACI,2CAAWnD,EAAOyB,MAAQzB,EAAOyB,MAAQzB,EAAOc,KAAhD,sBAEJ,eAACe,GAAD,CAAUC,QAAO,6CAAwC9B,EAAOqD,iBAChE,gBAACtB,GAAD,WACI,eAACC,GAAD,CACIF,QAAS9B,EAAOI,YAAP,6CAA2DJ,EAAOI,aAAgBC,EAAQ,MAEvG,gBAAC4B,GAAD,WACA,eAACC,GAAD,UACKlC,EAAOyB,MAAQzB,EAAOyB,MAAQzB,EAAOc,OAE1C,gBAACsB,GAAD,WACI,eAAC,GAAD,UACCpC,EAAOsD,aACFtD,EAAOsD,aAAaC,UAAU,EAAG,GACjCvD,EAAOwD,eAAeD,UAAU,EAAG,KAEzC,eAAClB,GAAD,qBACA,gBAAC,GAAD,WACCrC,EAAOyD,QAAUzD,EAAOyD,QAAUzD,EAAO0D,iBAAiB,GAD3D,UAGA,eAACrB,GAAD,qBACA,eAAC,GAAD,UACCrC,EAAO2D,QACJ3D,EAAO2D,OAAOzD,KAAI,SAAC0D,EAAOhD,GAAR,OAClBA,IAAUZ,EAAO2D,OAAOvC,OAAS,EAC3BwC,EAAM9C,KADZ,UAES8C,EAAM9C,KAFf,YAKJ,eAACuB,GAAD,qBACA,eAACC,GAAD,CAAMuB,KAAI,qCAAgC7D,EAAO8D,SAAUC,OAAO,SAAlE,qBAGJ,eAACvB,GAAD,UAAWxC,EAAOgE,WAElB,eAACtB,GAAD,CAAQ/C,IAAKA,EAAKsE,QAAS,kBAAMf,EAAO,eAAxC,wBAGA,eAACR,GAAD,CAAQ/C,IAAKA,EAAKsE,QAAS,kBAAMf,EAAO,YAAxC,qBAGEF,GAAW,eAACN,GAAD,CAAQ/C,IAAKA,EAAKsE,QAAS,kBAAMf,EAAO,WAAxC,oBAEb,gBAACN,GAAD,WACI,eAAC,GAAD,CAAY5C,OAAQA,EAAQL,IAAKA,IACjC,eAACuE,GAAD,CAASlE,OAAQA,EAAQL,IAAKA,KAC5BqD,GAAW,eAAC,GAAD,CAAQhD,OAAQA,EAAQL,IAAKA,iBCnE3CwE,G,kDCGX,WAAYjG,GAAO,IAAD,sBACd,cAAMA,GADQ,IAEIM,EAAaN,EAAxBK,SAAWC,SAFJ,OAGd,EAAK4F,MAAQ,CACTpE,OAAQ,KACR+C,MAAO,KACPD,SAAS,EACTE,QAASxE,EAAS6F,SAAS,YAPjB,E,8FAUlB,yCAAA9B,EAAA,2DACwD+B,KAAKpG,MAAhCiB,EAD7B,EACWoF,MAASzF,OAASK,GAAgBqF,EAD7C,EACmCC,QAAUD,KAClCxB,EAAWsB,KAAKF,MAAhBpB,SACJ0B,MAAS,EAAHvF,GAHb,yCAIeqF,EAAK,MAJpB,UAOQxE,EAAS,KAPjB,UASWgD,EATX,iCAUkC/D,GAAqBE,GAVvD,OAUkBwF,EAVlB,OAWY3E,EAAS2E,EAAQC,KAX7B,yCAakCrF,GAAiBJ,GAbnD,QAakBwF,EAblB,OAcY3E,EAAS2E,EAAQC,KAd7B,QAgBQN,KAAKO,SAAS,CAAC7E,WAhBvB,kDAkBQsE,KAAKO,SAAS,CAAC9B,MAAO,wBAlB9B,yBAoBQuB,KAAKO,SAAS,CAAC/B,SAAS,IApBhC,6E,0EAwBA,WAAU,IAAD,EACuCwB,KAAKF,MAAzCpE,EADH,EACGA,OAAQ+C,EADX,EACWA,MAAOD,EADlB,EACkBA,QAASE,EAD3B,EAC2BA,QAEhC,OADA8B,QAAQC,IAAI/E,GAER,eAAC,GAAD,CACIgD,QAAWA,EACXhD,OAAUA,EACV+C,MAASA,EACTD,QAAWA,Q,GA3CEkC,IAAMC,WCC7BzF,GAAY5B,KAAO6B,IAAV,sFAKTyC,GAAQtE,KAAOkC,KAAV,0EAILoF,GAAOtH,KAAO6B,IAAV,mJAsBK0F,GAfC,SAAC,GAAD,IAAE1D,EAAF,EAAEA,MAAO2D,EAAT,EAASA,SAAT,OACZ,gBAAC,GAAD,WACI,eAAC,GAAD,UAAQ3D,IACR,eAACyD,GAAD,UAAOE,QCpBT5F,GAAY5B,KAAO6B,IAAV,kGAKT4F,GAAOzH,KAAOkC,KAAV,qEACG,SAAA5B,GAAK,OAAIA,EAAMoH,SAiBbC,GAbC,SAAC,GAAD,IAAEC,EAAF,EAAEA,KAAMF,EAAR,EAAQA,MAAR,OAChB,eAAC,GAAD,UACI,eAACD,GAAD,CAAMC,MAAOA,EAAb,SAAqBE,OCXnBhG,GAAY5B,KAAO6B,IAAV,mDAGTgG,GAAQ7H,KAAO6B,IAAV,oNACiB,SAAAvB,GAAK,OAAIA,EAAM0B,SAOrC8F,GAAS9H,KAAOkC,KAAV,4HAMN6F,GAAiB/H,KAAO6B,IAAV,yMAIVgG,GAGAC,IAMJxD,GAAQtE,KAAOkC,KAAV,yJAOL8F,GAAOhI,KAAOkC,KAAV,yFAiCK+F,GA3BA,SAAC,GAAD,IAAE1G,EAAF,EAAEA,GAAI2G,EAAN,EAAMA,SAAUrE,EAAhB,EAAgBA,MAAOsE,EAAvB,EAAuBA,OAAQC,EAA/B,EAA+BA,KAAMhD,EAArC,EAAqCA,QAArC,OACX,eAAC,KAAD,CAAMvE,GAAI,CAACD,SAAUwE,EAAO,iBAAa7D,GAAb,gBAA2BA,GAAMiF,MAAO,CAACjF,GAAIA,IAAzE,SACI,gBAAC,GAAD,WACI,gBAACwG,GAAD,WACI,eAACF,GAAD,CAAO7F,MAAOkG,EAAQ,yCAEgBA,GAAazF,EAAQ,IAA+BC,UAC1F,gBAACoF,GAAD,WACI,uBAAMO,KAAK,MAAMC,aAAW,SAA5B,oBAA8C,IAC7CH,EAFL,YAKJ,eAAC,GAAD,UAAQtE,IACR,eAACmE,GAAD,UAAOI,UCnDbxG,GAAY5B,KAAO6B,IAAV,iDAIT0G,GAAOvI,KAAOwI,KAAV,2BAEJC,GAAQzI,KAAO0I,MAAV,sFAkEIC,GA3DS,SAAC,GAAD,IAAEC,EAAF,EAAEA,aAAcC,EAAhB,EAAgBA,UAAWC,EAA3B,EAA2BA,WAAY3D,EAAvC,EAAuCA,MAAOD,EAA9C,EAA8CA,QAAS6D,EAAvD,EAAuDA,SAAUC,EAAjE,EAAiEA,WAAjE,OACpB,gBAAC,GAAD,WACI,eAACzD,GAAA,EAAD,UACI,4DAEJ,eAACgD,GAAD,CAAMQ,SAAUA,EAAhB,SACI,eAACN,GAAD,CACIQ,YAAY,6BACZC,MAAOJ,EACPK,SAAUH,MAEjB9D,EAAU,eAACM,GAAD,IAAY,uCAClBoD,GAAgBA,EAAapF,OAAS,GACnC,eAAC,GAAD,CAASK,MAAQ,gBAAjB,SACK+E,EAAatG,KAAI,SAAA8G,GAAK,OACnB,eAAC,GAAD,CAEI7H,GAAI6H,EAAM7H,GACV2G,SAAUkB,EAAM5G,YAChBqB,MAAOuF,EAAMvF,MACbsE,OAAQiB,EAAMC,aACdjB,KAAMgB,EAAM1D,aAAaC,UAAU,EAAE,GACrCP,SAAS,GANJgE,EAAM7H,SAW1BsH,GAAaA,EAAUrF,OAAS,GAC7B,eAAC,GAAD,CAASK,MAAQ,aAAjB,SACKgF,EAAUvG,KAAI,SAAAgH,GAAI,OACf,eAAC,GAAD,CAEI/H,GAAI+H,EAAK/H,GACT2G,SAAUoB,EAAK9G,YACfqB,MAAOyF,EAAKpG,KACZiF,OAAQmB,EAAKD,aACbjB,KAAMkB,EAAK1D,gBAAkB0D,EAAK1D,eAAeD,UAAU,EAAE,GAC7DP,SAAS,GANJkE,EAAK/H,SAWzB4D,GAAS,eAAC,GAAD,CAASuC,MAAO,UAAWE,KAAMzC,IAC1C0D,GAAaD,GAAqC,IAArBC,EAAUrF,QAAwC,IAAxBoF,EAAapF,QAAiB,eAAC,GAAD,CAASkE,MAAO,OAAQE,KAAI,qEChE/G2B,G,4MCGX/C,MAAQ,CACJoC,aAAc,KACdC,UAAW,KACXC,WAAY,GACZ3D,MAAO,KACPD,SAAS,G,EAGbsE,aAAe,SAAAC,GACXA,EAAEC,iBADc,IAERZ,EAAe,EAAKtC,MAApBsC,WACY,KAAfA,GACD,EAAKa,aAAab,GAEtBW,EAAEtD,OAAO+C,MAAQ,I,EAErBF,WAAa,SAAAS,GAAM,IACEP,EAAUO,EAApBtD,OAAU+C,MACjB,EAAKjC,SAAS,CACV6B,WAAYI,K,EAIpBS,a,yCAAe,WAAMlI,GAAN,sBAAAkD,EAAA,+EAE4CtD,GAAsBI,GAFlE,uBAEoBmH,EAFpB,EAEC5B,KAASzD,QAFV,SAGyC5B,GAAkBF,GAH3D,gBAGoBoH,EAHpB,EAGC7B,KAASzD,QACjB,EAAK0D,SAAS,CAAC/B,SAAS,EAAM0D,eAAcC,cAC5C3B,QAAQC,IAAIyB,EAAcC,GALnB,kDAOP,EAAK5B,SAAS,CAAC9B,MAAO,kBAPf,yBASP,EAAK8B,SAAS,CAAC/B,SAAS,IATjB,6E,kGAYf,WAAU,IAAD,EAC0DwB,KAAKF,MAA5DoC,EADH,EACGA,aAAcC,EADjB,EACiBA,UAAWC,EAD5B,EAC4BA,WAAY3D,EADxC,EACwCA,MAAOD,EAD/C,EAC+CA,QACpD,OACI,eAAC,GAAD,CACI0D,aAAgBA,EAChBC,UAAaA,EACbC,WAAcA,EACd3D,MAASA,EACTD,QAAWA,EACX6D,SAAYrC,KAAK8C,aACjBR,WAActC,KAAKsC,iB,GA9CN5B,IAAMC,WCM7BzF,GAAY5B,KAAO6B,IAAV,iDAqEA+H,GAjEK,SAAC,GAAD,IAAEC,EAAF,EAAEA,SAAUC,EAAZ,EAAYA,YAAaC,EAAzB,EAAyBA,QAAS5E,EAAlC,EAAkCA,MAAlC,SAAyCD,QAAuB,eAACM,GAAD,IAChF,gBAAC,GAAD,WACI,eAACD,GAAA,EAAD,UACI,wDAEHsE,GAAYA,EAASrG,OAAS,GAC3B,eAAC,GAAD,CAASK,MAAM,YAAf,SACKgG,EAASvH,KAAI,SAACgH,EAAMtG,GAAP,OACV,eAAC,GAAD,CAEIzB,GAAI+H,EAAK/H,GACT2G,SAAUoB,EAAK9G,YACfqB,MAAOyF,EAAKpG,KACZiF,OAAQmB,EAAKD,aACbjB,KAAMkB,EAAK1D,gBAAkB0D,EAAK1D,eAAeD,UAAU,EAAE,GAC7DP,SAAS,GANJkE,EAAK/H,SAWzBuI,GAAeA,EAAYtG,OAAS,GACjC,eAAC,GAAD,CAASK,MAAM,eAAf,SACKiG,EAAYxH,KAAI,SAACgH,EAAMtG,GAAP,OACb,eAAC,GAAD,CAEIzB,GAAI+H,EAAK/H,GACT2G,SAAUoB,EAAK9G,YACfqB,MAAOyF,EAAKpG,KACZiF,OAAQmB,EAAKD,aACbjB,KAAMkB,EAAK1D,gBAAkB0D,EAAK1D,eAAeD,UAAU,EAAE,GAC7DP,SAAS,GANJkE,EAAK/H,SAWzBwI,GAAWA,EAAQvG,OAAS,GACzB,eAAC,GAAD,CAASK,MAAM,UAAf,SACKkG,EAAQzH,KAAI,SAACgH,EAAMtG,GAAP,OACT,eAAC,GAAD,CAEIzB,GAAI+H,EAAK/H,GACT2G,SAAUoB,EAAK9G,YACfqB,MAAOyF,EAAKpG,KACZiF,OAAQmB,EAAKD,aACbjB,KAAMkB,EAAK1D,gBAAkB0D,EAAK1D,eAAeD,UAAU,EAAE,GAC7DP,SAAS,GANJkE,EAAK/H,SAWrB4D,GAAS,eAAC,GAAD,CAASyC,KAAMzC,QC9DtB6E,G,4MCGXxD,MAAQ,CACJqD,SAAU,KACVC,YAAa,KACbC,QAAS,KACT5E,MAAO,KACPD,SAAS,G,gGAGb,uCAAAP,EAAA,+EAEqDhD,KAFrD,uBAEiCkI,EAFjC,EAEgB7C,KAAQzD,QAFxB,SAGmD5B,KAHnD,uBAGiCoI,EAHjC,EAGgB/C,KAAQzD,QAHxB,UAIuD5B,KAJvD,iBAIiCmI,EAJjC,EAIgB9C,KAAQzD,QAChBmD,KAAKO,SAAS,CAAC4C,WAAUE,UAASD,gBAL1C,kDAOQpD,KAAKO,SAAS,CAAC9B,MAAO,mCAP9B,yBASQuB,KAAKO,SAAS,CAAC/B,SAAS,IAThC,6E,0EAaA,WAAU,IAAD,EACqDwB,KAAKF,MAAvDqD,EADH,EACGA,SAAUC,EADb,EACaA,YAAaC,EAD1B,EAC0BA,QAAS5E,EADnC,EACmCA,MAAOD,EAD1C,EAC0CA,QAE/C,OADAgC,QAAQC,IAAI0C,EAAUE,EAASD,GAE3B,eAAC,GAAD,CACID,SAAYA,EACZC,YAAeA,EACfC,QAAWA,EACX5E,MAASA,EACTD,QAAWA,Q,GA/BEkC,IAAMC,WCK7BzF,GAAY5B,KAAO6B,IAAV,iDAoEAoI,GA/DO,SAAC,GAAD,IAAEC,EAAF,EAAEA,WAAYC,EAAd,EAAcA,SAAUJ,EAAxB,EAAwBA,QAAS5E,EAAjC,EAAiCA,MAAjC,SAAwCD,QAAuB,eAACM,GAAD,IACjF,gBAAC,GAAD,WACI,eAACD,GAAA,EAAD,UACI,2DAEH2E,GAAcA,EAAW1G,OAAS,GAC/B,eAAC,GAAD,CAASK,MAAM,cAAf,SACKqG,EAAW5H,KAAI,SAAC8G,EAAOpG,GAAR,OACZ,eAAC,GAAD,CAEIzB,GAAI6H,EAAM7H,GACV2G,SAAUkB,EAAM5G,YAChBqB,MAAOuF,EAAMvF,MACbsE,OAAQiB,EAAMC,aACdjB,KAAMgB,EAAM1D,cAAgB0D,EAAM1D,aAAaC,UAAU,EAAE,GAC3DP,SAAS,GANJgE,EAAM7H,SAW1B4I,GAAYA,EAAS3G,OAAS,GAC3B,eAAC,GAAD,CAASK,MAAM,WAAf,SACKsG,EAAS7H,KAAI,SAAC8G,EAAOpG,GAAR,OACV,eAAC,GAAD,CAEIzB,GAAI6H,EAAM7H,GACV2G,SAAUkB,EAAM5G,YAChBqB,MAAOuF,EAAMvF,MACbsE,OAAQiB,EAAMC,aACdjB,KAAMgB,EAAM1D,cAAgB0D,EAAM1D,aAAaC,UAAU,EAAE,GAC3DP,SAAS,GANJgE,EAAM7H,SAW1BwI,GAAWA,EAAQvG,OAAS,GACzB,eAAC,GAAD,CAASK,MAAM,UAAf,SACKkG,EAAQzH,KAAI,SAAC8G,EAAOpG,GAAR,OACT,eAAC,GAAD,CAEIzB,GAAI6H,EAAM7H,GACV2G,SAAUkB,EAAM5G,YAChBqB,MAAOuF,EAAMvF,MACbsE,OAAQiB,EAAMC,aACdjB,KAAMgB,EAAM1D,cAAgB0D,EAAM1D,aAAaC,UAAU,EAAE,GAC3DP,SAAS,GANJgE,EAAM7H,SAWtB4D,GAAS,eAAC,GAAD,CAASyC,KAAMzC,QC9DtBiF,G,4MCGX5D,MAAQ,CACJ0D,WAAY,KACZC,SAAU,KACVJ,QAAS,KACT5E,MAAO,KACPD,SAAS,G,gGAGb,uCAAAP,EAAA,+EAEqDtD,KAFrD,uBAEgC6I,EAFhC,EAEelD,KAAQzD,QAFvB,SAGmDlC,KAHnD,uBAGgC8I,EAHhC,EAGenD,KAAQzD,QAHvB,UAIkDlC,KAJlD,iBAIgC0I,EAJhC,EAIe/C,KAAQzD,QACfmD,KAAKO,SAAS,CAACiD,aAAYC,WAAUJ,YAL7C,kDAOQrD,KAAKO,SAAS,CACV9B,MAAO,mCARnB,yBAWQuB,KAAKO,SAAS,CACV/B,SAAS,IAZrB,6E,0EAiBA,WAAU,IAAD,EACoDwB,KAAKF,MAAtD0D,EADH,EACGA,WAAYC,EADf,EACeA,SAAUJ,EADzB,EACyBA,QAAS5E,EADlC,EACkCA,MAAOD,EADzC,EACyCA,QAC9C,OACI,eAAC,GAAD,CACIgF,WAAcA,EACdC,SAAYA,EACZJ,QAAWA,EACX5E,MAASA,EACTD,QAAWA,Q,GAlCEkC,IAAMC,WCMpB,qBACX,gBAAC,KAAD,WACI,eAAC,GAAD,IACA,gBAAC,KAAD,WACI,eAAC,KAAD,CAAOgD,KAAK,IAAIC,OAAK,EAACC,UAAWC,KACjC,eAAC,KAAD,CAAOH,KAAK,UAAUE,UAAWE,KACjC,eAAC,KAAD,CAAOJ,KAAK,MAAME,UAAWG,KAC7B,eAAC,KAAD,CAAOL,KAAK,aAAaE,UAAWI,KACpC,eAAC,KAAD,CAAON,KAAK,YAAYE,UAAWI,KACnC,eAAC,KAAD,CAAUC,KAAK,IAAI/J,GAAG,a,SCGnBgK,GAlBMC,aAAH,icACZC,MCWSC,G,4JAVb,WACE,OACE,uCACE,eAACC,GAAD,IACA,eAAC,GAAD,W,GALU5D,aCClB6D,IAASC,OACP,eAAC,IAAMC,WAAP,UACE,eAAC,GAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.a25a64cc.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/noPosterSmall.cfcd0cff.png\";","import React from \"react\";\r\nimport { Link, withRouter } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Header = styled.header`\r\n    position: fixed;\r\n    top: 0;\r\n    left: 0;\r\n    width: 100%;\r\n    height: 50px;\r\n    display: flex;\r\n    align-items: center;\r\n    padding: 0px 10px;\r\n    background-color: rgba(20,20,20,0.8);\r\n    z-index:1;\r\n    box-shadow: 0px 1px 5px 2px rgba(0, 0, 0, 0.8);\r\n`;\r\nconst List = styled.ul`\r\n    display: flex;\r\n    list-style: none;\r\n`;\r\nconst Item = styled.li`\r\n    width: 80px;\r\n    height: 50px;\r\n    text-align: center;\r\n    border-bottom: 5px solid ${props => (props.current ? \"crimson\" : \"transparent\")};\r\n    transition: 0.5s ease-in-out;\r\n`;\r\nconst HLink = styled(Link)`\r\n    height: 100%;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n`;\r\n\r\nconst headerWithRouter = props => (\r\n    <Header>\r\n        <List>\r\n            <Item current={props.location.pathname === \"/\"}>\r\n                <HLink to=\"/\">Movies</HLink>\r\n            </Item>\r\n            <Item current={props.location.pathname === \"/tv\"}>\r\n                <HLink to=\"/tv\">TV</HLink>\r\n            </Item>\r\n            <Item current={props.location.pathname === \"/search\"}>\r\n                <HLink to=\"/search\">Search</HLink>\r\n            </Item>\r\n        </List>\r\n    </Header>\r\n);\r\n\r\nexport default withRouter(headerWithRouter);","import axios from \"axios\";\r\n\r\nconst api = axios.create({\r\n    baseURL: \"https://api.themoviedb.org/3\",\r\n    params: {\r\n        api_key: \"b1a704c7a928124b5b3eceef82448ec2\",\r\n        language: \"en-US\"\r\n    }\r\n})\r\n\r\nexport const movieApi = {\r\n    nowPlaying: () => api.get(\"movie/now_playing\"),\r\n    upcoming: () => api.get(\"movie/upcoming\"),\r\n    popular: () => api.get(\"movie/popular\"),\r\n    movieDetail: id => api.get(`movie/${id}`, {\r\n        params: {\r\n            append_to_response: \"videos\"\r\n        }\r\n    }),\r\n    movieResults: term => api.get(`search/movie`, {\r\n        params: {\r\n            query: term\r\n        }\r\n    }),\r\n}\r\nexport const tvApi = {\r\n    topRated: () => api.get(\"tv/top_rated\"),\r\n    popular: () => api.get(\"tv/popular\"),\r\n    airingToday: () => api.get(\"tv/airing_today\"),\r\n    showDetail: id => api.get(`tv/${id}`, {\r\n        params: {\r\n            append_to_response: \"videos\"\r\n        }\r\n    }),\r\n    showResults: term => api.get(`search/tv`, {\r\n        params: {\r\n            query: term\r\n        }\r\n    }),\r\n}\r\n\r\n\r\n// api.get(\"tv/popular\");\r\n// export default api;","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Container = styled.div`\r\n    height: 100vh;\r\n    width: 100vw;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n`;\r\n\r\nexport default () => <Container>로딩중</Container>","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport PropTypes from \"prop-types\";\r\n\r\n\r\nconst Flex = styled.div`\r\n    display: ${props => props.tab === \"season\" ? \"flex\" : \"none\"};\r\n    flex-wrap: wrap;\r\n`\r\nconst Container = styled.div`\r\n    font-size: 12px;\r\n    margin: 10px;\r\n    display: flex;\r\n    justify-content: center; align-items: center;\r\n    background-image: url(${props => props.bgUrl});\r\n    height: 150px; width: 150px;\r\n    background-size: cover;\r\n    background-position: center center;\r\n    border-radius: 10px;\r\n    transition: 0.2s ease-in-out;\r\n`;\r\nconst SeasonNum = styled.span`\r\n    font-weight: 600;\r\n    background-color: rgba(0, 0, 0, 0.7);\r\n    padding: 5px;\r\n`;\r\n\r\n\r\nconst Season = ({result, tab}) => (\r\n    <Flex tab={tab}>\r\n        {result.seasons.map((season) =>\r\n            <Container\r\n                bgUrl={season.poster_path\r\n                ? \r\n                `https://image.tmdb.org/t/p/w300${season.poster_path}` : require(\"../assets/noPosterSmall.png\").default} >\r\n                <SeasonNum>\r\n                    S{season.season_number}\r\n                </SeasonNum>\r\n            </Container>\r\n        )}\r\n    </Flex>\r\n);\r\n\r\nSeason.propTypes = {\r\n    imageUrl: PropTypes.string,\r\n    seasonNumber: PropTypes.number,\r\n    isMovie: PropTypes.bool.isRequired\r\n}\r\n\r\nexport default Season;","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport PropTypes from \"prop-types\";\r\n\r\n\r\nconst Flex = styled.div`\r\n    display: ${props => props.tab === \"production\" ? \"flex\" : \"none\"};\r\n    flex-wrap: wrap;\r\n`\r\nconst Container = styled.div`\r\n    position: relative;\r\n    font-size: 12px;\r\n    margin: 10px;\r\n    display: flex;\r\n    justify-content: center; align-items: center;\r\n    background-image: url(${props => props.bgUrl});\r\n    background-size: contain;\r\n    background-position: center center;\r\n    height: 130px; width: 130px;\r\n    transition: 0.2s ease-in-out;\r\n    border-radius: 50%;\r\n    text-align: center;\r\n`;\r\nconst ProInfo = styled.span`\r\n    font-weight: 600;\r\n    background-color: rgba(0, 0, 0, 0.7);\r\n    padding: 5px;\r\n`;\r\n\r\n\r\nconst Production = ({result, tab}) => (\r\n    <Flex tab={tab}>\r\n        {result.production_companies.map(( company, index ) => \r\n        <Container \r\n            key={`production${index}`}\r\n            bgUrl={company.logo_path\r\n            ? \r\n            `https://image.tmdb.org/t/p/w300${company.logo_path}` : require(\"../assets/noPosterSmall.png\").default}>\r\n            <ProInfo>\r\n                {company.name}, {company.origin_country}\r\n            </ProInfo>\r\n        </Container>)}\r\n    </Flex>\r\n);\r\n\r\nProduction.propTypes = {\r\n    imageUrl: PropTypes.string,\r\n    seasonNumber: PropTypes.number,\r\n    isMovie: PropTypes.bool.isRequired\r\n}\r\n\r\nexport default Production;","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\n\r\nconst Container = styled.div`\r\n    display: ${props => props.tab === \"youtube\" ? \"flex\" : \"none\"};\r\n    flex-wrap: wrap;\r\n`;\r\nconst Iframe = styled.iframe`\r\n    margin: 10px;\r\n`;\r\n\r\nexport default ({result, tab}) => {\r\n    \r\n    return (\r\n        <Container tab={tab}>\r\n            {result.videos.results.length > 0 ? result.videos.results.map(result =>\r\n                <Iframe \r\n                    width=\"300\"\r\n                    height=\"168\"\r\n                    src={`https://www.youtube.com/embed/${result.key}`}\r\n                    title=\"YouTube video player\"\r\n                    frameborder=\"0\"\r\n                    allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\r\n                    allowfullscreen\r\n                />) : \"Can't Find Video About This\"}\r\n        </Container>\r\n    );\r\n}","import React, { useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport PropTypes from \"prop-types\";\r\nimport Loader from \"Components/Loader\";\r\nimport Helmet from \"react-helmet\";\r\nimport Season from \"Components/Season\";\r\nimport Production from \"Components/Production\";\r\nimport Youtube from \"Components/Youtube\";\r\n\r\n\r\nconst DetailPresenter = ({result, error, loading, isMovie}) => {\r\n\r\n    const [tab, setTab] = useState(\"production\");\r\n\r\n    return loading ? <>\r\n    <Helmet>\r\n        <title>LoadingㅣYongcha!</title>\r\n    </Helmet>\r\n    <Loader />\r\n    </> : (\r\n    <Container>\r\n        <Helmet>\r\n            <title>{`${result.title ? result.title : result.name}ㅣYongcha!`}</title>\r\n        </Helmet>\r\n        <Backdrop bgImage={`https://image.tmdb.org/t/p/original${result.backdrop_path}`} />\r\n        <Content>\r\n            <Cover \r\n                bgImage={result.poster_path ? `https://image.tmdb.org/t/p/original${result.poster_path}` : require(\"../../assets/noPosterSmall.png\")}\r\n            />\r\n            <Data>\r\n            <Title>\r\n                {result.title ? result.title : result.name}\r\n            </Title>\r\n            <ItemContainer>\r\n                <Item>\r\n                {result.release_date\r\n                    ? result.release_date.substring(0, 4)\r\n                    : result.first_air_date.substring(0, 4)}\r\n                </Item>\r\n                <Divider>•</Divider>\r\n                <Item>\r\n                {result.runtime ? result.runtime : result.episode_run_time[0]} min\r\n                </Item>\r\n                <Divider>•</Divider>\r\n                <Item>\r\n                {result.genres &&\r\n                    result.genres.map((genre, index) =>\r\n                    index === result.genres.length - 1\r\n                        ? genre.name\r\n                        : `${genre.name} / `\r\n                    )}\r\n                </Item>\r\n                <Divider>•</Divider>\r\n                <IMDB href={`https://www.imdb.com/title/${result.imdb_id}`}target=\"_blank\">IMDB</IMDB>\r\n            </ItemContainer>\r\n            \r\n            <Overview>{result.overview}</Overview>\r\n            \r\n            <TabBtn tab={tab} onClick={() => setTab(\"production\")}>\r\n                Production\r\n            </TabBtn>\r\n            <TabBtn tab={tab} onClick={() => setTab(\"youtube\")}>\r\n                Videos\r\n            </TabBtn>\r\n            {!isMovie && <TabBtn tab={tab} onClick={() => setTab(\"season\")}>Season</TabBtn>}\r\n\r\n            <TabContainer>\r\n                <Production result={result} tab={tab}/>\r\n                <Youtube result={result} tab={tab}/>\r\n                {!isMovie && <Season result={result} tab={tab}/>}\r\n            </TabContainer>\r\n        </Data>\r\n        </Content>\r\n    </Container>\r\n    )\r\n}\r\n    \r\nconst Container = styled.div`\r\n    height: calc(100vh - 50px);\r\n    width: 100%;\r\n    position: relative;\r\n    padding: 50px;\r\n`;\r\nconst Backdrop = styled.div`\r\n    position: absolute;\r\n    top: 0px;\r\n    left: 0;\r\n    width: 100%;\r\n    height: 100%;\r\n    background-image: url(${props => props.bgImage});\r\n    background-size: cover;\r\n    background-position: center center;\r\n    filter: blur(3px);\r\n    opacity: 0.5;\r\n    z-index: 0;\r\n`;\r\nconst Content = styled.div`\r\n    display: flex;\r\n    height: 100%;\r\n`;\r\nconst Cover = styled.div`\r\n    width: 30%;\r\n    background-image: url(${props => props.bgImage});\r\n    background-size: cover;\r\n    background-position: center center;\r\n    height: 100%;\r\n    border-radius: 5px;\r\n    z-index: 1;\r\n`;\r\nconst Data = styled.div`\r\n    width: 70%;\r\n    margin-left: 10px;\r\n    z-index: 1;\r\n`;\r\nconst Title = styled.h3`\r\n    font-size: 32px;\r\n`;\r\nconst ItemContainer = styled.div`\r\n    margin: 20px 0;\r\n`;\r\nconst Item = styled.span``;\r\nconst Divider = styled.span`\r\n    margin: 0 10px;\r\n`;\r\nconst IMDB = styled.a`\r\n    text-decoration: underline;\r\n`;\r\nconst Overview = styled.p`\r\n    font-size: 12px;\r\n    opacity: 0.7;\r\n    line-height: 1.5;\r\n    width: 50%;\r\n`;\r\nconst TabBtn = styled.button`\r\n    margin: 20px 10px 10px 0;\r\n    padding: 10px 15px;\r\n    background-color: rgba(0, 0, 0, 0.7);\r\n    color: white;\r\n    border: 0;\r\n    transition: 0.2s;\r\n    cursor: pointer;\r\n    box-sizing: border-box;\r\n    &:hover{\r\n        background-color: black; \r\n        color: red;\r\n    }\r\n    &:first-of-type{\r\n        border-bottom: ${props => props.tab === \"production\" ? \"2px solid red\" : \"none\"};\r\n    }\r\n    &:nth-of-type(2){\r\n        border-bottom: ${props => props.tab === \"youtube\" ? \"2px solid red\" : \"none\"};\r\n    }\r\n    &:last-of-type{\r\n        border-bottom: ${props => props.tab === \"season\" ? \"2px solid red\" : \"none\"};\r\n    }\r\n`;\r\nconst TabContainer = styled.div`\r\n    width: 70%;\r\n    padding: 30px;\r\n    background-color: rgba(0, 0, 0, 0.7);\r\n    overflow-y: scroll;\r\n    height: 420px;\r\n    &::-webkit-scrollbar{width:5px;}\r\n    &::-webkit-scrollbar-thumb{background-color: red;}\r\n    &::-webkit-scrollbar-track{background-color: black;}\r\n`;\r\n\r\nDetailPresenter.propTypes = {\r\n    results: PropTypes.array,\r\n    error: PropTypes.string,\r\n    loading: PropTypes.bool.isRequired,\r\n}\r\n\r\n\r\nexport default DetailPresenter;","import DetailContainer from \"./DetailContainer\";\r\n\r\nexport default DetailContainer;","import { movieApi, tvApi } from \"api\";\r\nimport React from \"react\"\r\nimport DetailPresenter from \"./DetailPresenter\";\r\n\r\nexport default class extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        const {location: {pathname}} = props;\r\n        this.state = {\r\n            result: null,\r\n            error: null,\r\n            loading: true,\r\n            isMovie: pathname.includes(\"/movie/\")\r\n        };\r\n    }\r\n    async componentDidMount(){\r\n        const {match: { params: {id}}, history: {push}, } = this.props;\r\n        const {isMovie} = this.state;\r\n        if(isNaN(id*1)){\r\n            return push(\"/\");\r\n        }\r\n        \r\n        let result = null;\r\n        try{\r\n            if(isMovie){\r\n                const request = await movieApi.movieDetail(id);\r\n                result = request.data;\r\n            } else {\r\n                const request = await tvApi.showDetail(id);\r\n                result = request.data;\r\n            }\r\n            this.setState({result});\r\n        } catch{\r\n            this.setState({error: \"can't find anything\"})\r\n        }finally{\r\n            this.setState({loading: false})\r\n        }\r\n\r\n    }\r\n    render() {\r\n        const { result, error, loading, isMovie } = this.state;\r\n        console.log(result);\r\n        return(\r\n            <DetailPresenter\r\n                isMovie = {isMovie}\r\n                result = {result}\r\n                error = {error}\r\n                loading = {loading}\r\n            />\r\n        )\r\n    }\r\n}","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\n\r\n\r\nconst Container = styled.div`\r\n    :not(:last-child){\r\n    margin-bottom: 50px;\r\n    }\r\n`;\r\nconst Title = styled.span`\r\n    font-size: 14px;\r\n    font-weight: 600;\r\n`;\r\nconst Grid = styled.div`\r\n    margin-top: 25px;\r\n    display: grid;\r\n    grid-template-columns: repeat(auto-fill, 125px);\r\n    grid-gap: 25px;\r\n`;\r\n\r\nconst Section = ({title, children}) => (\r\n    <Container>\r\n        <Title>{title}</Title>\r\n        <Grid>{children}</Grid>\r\n    </Container>\r\n)\r\n\r\nSection.propTypes = {\r\n    title:PropTypes.string.isRequired,\r\n    children: PropTypes.oneOfType([\r\n        PropTypes.arrayOf(PropTypes.node),\r\n        PropTypes.node\r\n    ])\r\n}\r\n\r\nexport default Section;","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Container = styled.div`\r\n    width: 100vw;\r\n    display: flex;\r\n    justify-content: center;\r\n`;\r\nconst Text = styled.span`\r\n    color: ${props => props.color};\r\n    font-weight: 600;\r\n`;\r\n\r\nconst Message = ({text, color}) => (\r\n<Container>\r\n    <Text color={color}>{text}</Text>\r\n</Container>\r\n);\r\n\r\n\r\nMessage.propTypes = {\r\n    text: PropTypes.string.isRequired,\r\n    color: PropTypes.string.isRequired\r\n}\r\n\r\n\r\nexport default Message;","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst Container = styled.div`\r\n    font-size: 12px;\r\n`;\r\nconst Image = styled.div`\r\n    background-image: url(${props => props.bgUrl});\r\n    height: 180px;\r\n    background-size: cover;\r\n    background-position: center center;\r\n    border-radius: 3px;\r\n    transition: 0.2s ease-in-out;\r\n`;\r\nconst Rating = styled.span`\r\n    position: absolute;\r\n    bottom: 5px; right: 5px;\r\n    opacity: 0;\r\n    transition: 0.2s;\r\n`;\r\nconst ImageContainer = styled.div`\r\n    margin-bottom: 5px;\r\n    position: relative;\r\n    &:hover{\r\n        ${Image}{\r\n            opacity: 0.3;\r\n        }\r\n        ${Rating}{\r\n            opacity: 1;\r\n        }\r\n    }\r\n`;\r\n\r\nconst Title = styled.span`\r\n    display: block;\r\n    margin-bottom: 3px;\r\n    overflow: hidden;\r\n    text-overflow: ellipsis;\r\n    white-space:nowrap;\r\n`;\r\nconst Year = styled.span`\r\n    font-size: 10px;\r\n    color: rgba(255, 255, 255, 0.5);\r\n`;\r\n\r\n\r\nconst Poster = ({id, imageUrl, title, rating, year, isMovie}) => (\r\n    <Link to={{pathname: isMovie ? `/movie/${id}`:`/show/${id}`, state: {id: id}}}>\r\n        <Container>\r\n            <ImageContainer>\r\n                <Image bgUrl={imageUrl \r\n                    ? \r\n                    `https://image.tmdb.org/t/p/w300${imageUrl}` : require(\"../assets/noPosterSmall.png\").default} />\r\n                <Rating>\r\n                    <span role=\"img\" aria-label=\"rating\">⭐</span>{\" \"}\r\n                    {rating}/10\r\n                </Rating>\r\n            </ImageContainer>\r\n            <Title>{title}</Title>\r\n            <Year>{year}</Year>\r\n        </Container>\r\n    </Link>\r\n);\r\n\r\nPoster.propTypes = {\r\n    id: PropTypes.number.isRequired,\r\n    imageUrl: PropTypes.string,\r\n    title: PropTypes.string.isRequired,\r\n    rating: PropTypes.number,\r\n    year: PropTypes.string,\r\n    isMovie: PropTypes.bool.isRequired\r\n}\r\n\r\nexport default Poster;","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport PropTypes from \"prop-types\";\r\nimport Loader from \"Components/Loader\";\r\nimport Section from \"Components/Section\";\r\nimport Message from \"Components/Message\";\r\nimport Poster from \"Components/Poster\";\r\nimport Helmet from \"react-helmet\";\r\n\r\n\r\nconst Container = styled.div`\r\n    padding: 20px;\r\n`;\r\n\r\nconst Form = styled.form``;\r\n\r\nconst Input = styled.input`\r\n    all: unset;\r\n    font-size: 28px;\r\n    width: 100%;\r\n`;\r\n\r\n\r\nconst SearchPresenter = ({movieResults, tvResults, searchTerm, error, loading, onSubmit, updateTerm}) => (\r\n    <Container>\r\n        <Helmet>\r\n            <title>SearchㅣYongcha!</title>\r\n        </Helmet>\r\n        <Form onSubmit={onSubmit}>\r\n            <Input \r\n                placeholder=\"Search Movies or TV show..\"\r\n                value={searchTerm}\r\n                onChange={updateTerm}/>\r\n        </Form>\r\n        {loading ? <Loader/> : <>\r\n            {movieResults && movieResults.length > 0 && (\r\n                <Section title = \"Movie Results\">\r\n                    {movieResults.map(movie => (\r\n                        <Poster\r\n                            key={movie.id}\r\n                            id={movie.id}\r\n                            imageUrl={movie.poster_path}\r\n                            title={movie.title}\r\n                            rating={movie.vote_average}\r\n                            year={movie.release_date.substring(0,4)}\r\n                            isMovie={true}\r\n                        />\r\n                    ))}\r\n                </Section>\r\n            )}\r\n            {tvResults && tvResults.length > 0 && (\r\n                <Section title = \"tv Results\">\r\n                    {tvResults.map(show => (\r\n                        <Poster\r\n                            key={show.id}\r\n                            id={show.id}\r\n                            imageUrl={show.poster_path}\r\n                            title={show.name}\r\n                            rating={show.vote_average}\r\n                            year={show.first_air_date && show.first_air_date.substring(0,4)}\r\n                            isMovie={false}\r\n                        />\r\n                    ))}\r\n                </Section>\r\n            )}\r\n            {error && <Message color={\"crimson\"} text={error} />}\r\n            {tvResults && movieResults && tvResults.length === 0 && movieResults.length === 0 && (<Message color={\"gray\"} text={`검색 결과가 없습니다.`}/>)}\r\n        </>}\r\n    </Container>\r\n);\r\n\r\nSearchPresenter.propTypes = {\r\n    movieResults: PropTypes.array,\r\n    tvResults: PropTypes.array,\r\n    searchTerm: PropTypes.string,\r\n    error: PropTypes.string,\r\n    loading: PropTypes.bool.isRequired,\r\n    onSubmit: PropTypes.func.isRequired,\r\n    updateTerm: PropTypes.func.isRequired\r\n}\r\n\r\n\r\nexport default SearchPresenter;","import SearchContainer from \"./SearchContainer\";\r\n\r\nexport default SearchContainer;","import React from \"react\"\r\nimport SearchPresenter from \"./SearchPresenter\";\r\nimport { movieApi, tvApi } from \"api\";\r\n\r\nexport default class extends React.Component{\r\n    state = {\r\n        movieResults: null,\r\n        tvResults: null,\r\n        searchTerm: \"\",\r\n        error: null,\r\n        loading: false,\r\n    };\r\n\r\n    handleSubmit = e => {\r\n        e.preventDefault();\r\n        const { searchTerm } = this.state;\r\n        if ( searchTerm !== \"\" ){\r\n            this.searchByTerm(searchTerm);\r\n        }\r\n        e.target.value = '';\r\n    }\r\n    updateTerm = e => {\r\n        const {target : {value}} = e;\r\n        this.setState({\r\n            searchTerm: value\r\n        })\r\n    }\r\n\r\n    searchByTerm = async term => {\r\n        try{\r\n            const { data : { results : movieResults }} = await movieApi.movieResults(term);\r\n            const { data : { results : tvResults }} = await tvApi.showResults(term);\r\n            this.setState({loading: true, movieResults, tvResults});\r\n            console.log(movieResults, tvResults);\r\n        }catch{\r\n            this.setState({error: \"cannot search\"})\r\n        }finally{\r\n            this.setState({loading: false});\r\n        }\r\n    }\r\n    render() {\r\n        const { movieResults, tvResults, searchTerm, error, loading} = this.state;\r\n        return(\r\n            <SearchPresenter \r\n                movieResults = {movieResults}\r\n                tvResults = {tvResults}\r\n                searchTerm = {searchTerm}\r\n                error = {error}\r\n                loading = {loading}\r\n                onSubmit = {this.handleSubmit}\r\n                updateTerm = {this.updateTerm}\r\n            />\r\n        )\r\n    }\r\n}","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport PropTypes from \"prop-types\";\r\nimport Section from \"Components/Section\";\r\nimport Loader from \"Components/Loader\";\r\nimport Message from \"Components/Message\";\r\nimport Poster from \"Components/Poster\";\r\nimport { Helmet } from \"react-helmet\";\r\n\r\n\r\nconst Container = styled.div`\r\n    padding: 20px;\r\n`;\r\n\r\nconst TVPresenter = ({topRated, airingToday, popular, error, loading}) => loading ? <Loader/> : (\r\n    <Container>\r\n        <Helmet>\r\n            <title>TVㅣYongcha!</title>\r\n        </Helmet>\r\n        {topRated && topRated.length > 0 && (\r\n            <Section title=\"Top Rated\">\r\n                {topRated.map((show, index) => (\r\n                    <Poster\r\n                        key={show.id}\r\n                        id={show.id}\r\n                        imageUrl={show.poster_path}\r\n                        title={show.name}\r\n                        rating={show.vote_average}\r\n                        year={show.first_air_date && show.first_air_date.substring(0,4)}\r\n                        isMovie={false}\r\n                    />\r\n                ))}\r\n            </Section>\r\n            )}\r\n        {airingToday && airingToday.length > 0 && (\r\n            <Section title=\"Airing Today\">\r\n                {airingToday.map((show, index) => (\r\n                    <Poster\r\n                        key={show.id}\r\n                        id={show.id}\r\n                        imageUrl={show.poster_path}\r\n                        title={show.name}\r\n                        rating={show.vote_average}\r\n                        year={show.first_air_date && show.first_air_date.substring(0,4)}\r\n                        isMovie={false}\r\n                    />\r\n                ))}\r\n            </Section>\r\n            )}\r\n        {popular && popular.length > 0 && (\r\n            <Section title=\"Popular\">\r\n                {popular.map((show, index) => (\r\n                    <Poster\r\n                        key={show.id}\r\n                        id={show.id}\r\n                        imageUrl={show.poster_path}\r\n                        title={show.name}\r\n                        rating={show.vote_average}\r\n                        year={show.first_air_date && show.first_air_date.substring(0,4)}\r\n                        isMovie={false}\r\n                    />\r\n                ))}\r\n            </Section>\r\n            )}\r\n            {error && <Message text={error} />}\r\n    </Container>\r\n);\r\n\r\n\r\n\r\nTVPresenter.propTypes = {\r\n    topRated: PropTypes.array,\r\n    airingToday: PropTypes.array,\r\n    popular: PropTypes.array,\r\n    error: PropTypes.string,\r\n    loading: PropTypes.bool.isRequired,\r\n}\r\n\r\n\r\nexport default TVPresenter;","import TVContainer from \"./TVContainer\";\r\n\r\nexport default TVContainer;","import { tvApi } from \"api\";\r\nimport React from \"react\"\r\nimport TVPresenter from \"./TVPresenter\";\r\n\r\nexport default class extends React.Component{\r\n    state = {\r\n        topRated: null,\r\n        airingToday: null,\r\n        popular: null,\r\n        error: null,\r\n        loading: true,\r\n    };\r\n\r\n    async componentDidMount(){\r\n        try{\r\n            const { data : {results: topRated} } = await tvApi.topRated();\r\n            const { data : {results: popular}} = await tvApi.popular();\r\n            const { data : {results: airingToday}} = await tvApi.airingToday();\r\n            this.setState({topRated, popular, airingToday});\r\n        }catch{\r\n            this.setState({error: \"Can't find TVshow information.\"})\r\n        }finally{\r\n            this.setState({loading: false});\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const { topRated, airingToday, popular, error, loading} = this.state;\r\n        console.log(topRated, popular, airingToday);\r\n        return(\r\n            <TVPresenter \r\n                topRated = {topRated}\r\n                airingToday = {airingToday}\r\n                popular = {popular}\r\n                error = {error}\r\n                loading = {loading}\r\n            />\r\n        )\r\n    }\r\n}","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport PropTypes from \"prop-types\";\r\nimport Section from \"Components/Section\";\r\nimport Loader from \"Components/Loader\";\r\nimport Message from \"Components/Message\";\r\nimport Poster from \"Components/Poster\";\r\nimport Helmet from \"react-helmet\";\r\n\r\nconst Container = styled.div`\r\n    padding: 20px;\r\n`;\r\n\r\n\r\nconst HomePresenter = ({nowPlaying, upcoming, popular, error, loading}) => loading ? <Loader/> : (\r\n    <Container>\r\n        <Helmet>\r\n            <title>MovieㅣYongcha!</title>\r\n        </Helmet>\r\n        {nowPlaying && nowPlaying.length > 0 && (\r\n            <Section title=\"Now Playing\">\r\n                {nowPlaying.map((movie, index) => (\r\n                    <Poster\r\n                        key={movie.id}\r\n                        id={movie.id}\r\n                        imageUrl={movie.poster_path}\r\n                        title={movie.title}\r\n                        rating={movie.vote_average}\r\n                        year={movie.release_date && movie.release_date.substring(0,4)}\r\n                        isMovie={true}\r\n                    />\r\n                ))}\r\n            </Section>\r\n            )}\r\n        {upcoming && upcoming.length > 0 && (\r\n            <Section title=\"Upcoming\">\r\n                {upcoming.map((movie, index) => (\r\n                    <Poster\r\n                        key={movie.id}\r\n                        id={movie.id}\r\n                        imageUrl={movie.poster_path}\r\n                        title={movie.title}\r\n                        rating={movie.vote_average}\r\n                        year={movie.release_date && movie.release_date.substring(0,4)}\r\n                        isMovie={true}\r\n                    />\r\n                ))}\r\n            </Section>\r\n            )}\r\n        {popular && popular.length > 0 && (\r\n            <Section title=\"Popular\">\r\n                {popular.map((movie, index) => (\r\n                    <Poster\r\n                        key={movie.id}\r\n                        id={movie.id}\r\n                        imageUrl={movie.poster_path}\r\n                        title={movie.title}\r\n                        rating={movie.vote_average}\r\n                        year={movie.release_date && movie.release_date.substring(0,4)}\r\n                        isMovie={true}\r\n                    />\r\n                ))}\r\n            </Section>\r\n            )}\r\n            {error && <Message text={error} />}\r\n    </Container>\r\n);\r\n\r\nHomePresenter.propTypes = {\r\n    nowPlaying: PropTypes.array,\r\n    upcoming: PropTypes.array,\r\n    popular: PropTypes.array,\r\n    error: PropTypes.string,\r\n    loading: PropTypes.bool.isRequired,\r\n}\r\n\r\n\r\nexport default HomePresenter;","import HomeContainer from \"./HomeContainer\";\r\n\r\nexport default HomeContainer;","import { movieApi } from \"api\";\r\nimport React from \"react\"\r\nimport HomePresenter from \"./HomePresenter\";\r\n\r\nexport default class extends React.Component{\r\n    state = {\r\n        nowPlaying: null,\r\n        upcoming: null,\r\n        popular: null,\r\n        error: null,\r\n        loading: true,\r\n    };\r\n\r\n    async componentDidMount(){\r\n        try{\r\n            const {data : {results: nowPlaying}} = await movieApi.nowPlaying();\r\n            const {data : {results: upcoming}} = await movieApi.upcoming();\r\n            const {data : {results: popular}} = await movieApi.popular();\r\n            this.setState({nowPlaying, upcoming, popular})\r\n        }catch{\r\n            this.setState({\r\n                error: \"Can't find movies information.\"\r\n            })\r\n        }finally{\r\n            this.setState({\r\n                loading: false,\r\n            })\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const { nowPlaying, upcoming, popular, error, loading} = this.state;\r\n        return(\r\n            <HomePresenter \r\n                nowPlaying = {nowPlaying}\r\n                upcoming = {upcoming}\r\n                popular = {popular}\r\n                error = {error}\r\n                loading = {loading}\r\n            />\r\n        )\r\n    }\r\n}","import React from \"react\";\r\nimport { BrowserRouter as Router, Route, Redirect, Switch } from \"react-router-dom\";\r\nimport Header from './Header';\r\nimport Detail from \"Routes/Detail\";\r\nimport Search from \"Routes/Search\";\r\nimport TV from \"Routes/TV\";\r\nimport Home from \"Routes/Home\";\r\n\r\n\r\n\r\nexport default () => (\r\n    <Router>\r\n        <Header />\r\n        <Switch>\r\n            <Route path=\"/\" exact component={Home}/>\r\n            <Route path=\"/search\" component={Search}/>\r\n            <Route path=\"/tv\" component={TV}/>\r\n            <Route path=\"/movie/:id\" component={Detail}/>\r\n            <Route path=\"/show/:id\" component={Detail}/>\r\n            <Redirect from=\"*\" to=\"/\" />\r\n        </Switch>\r\n    </Router>\r\n)","import { createGlobalStyle } from \"styled-components\";\r\nimport reset from \"styled-reset\";\r\n\r\n\r\nconst GlobalStyles = createGlobalStyle`\r\n    ${reset};\r\n    a{\r\n        text-decoration: none;\r\n        color: inherit;\r\n    }\r\n    *{\r\n        box-sizing: border-box;\r\n    }\r\n    body{\r\n        font-family: --apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\r\n        font-size: 12px;\r\n        background-color: rgba(20, 20, 20, 1);\r\n        color: white;\r\n        padding-top: 50px;\r\n    }\r\n`\r\n\r\nexport default GlobalStyles;","import React, { Component } from 'react';\nimport Router from './Router';\nimport GlobalStyles from './GlobalStyles';\n\n\nclass App extends Component {\n  render() {\n    return (\n      <>\n        <Router />\n        <GlobalStyles />\n      </>\n    );\n  }\n}\n\nexport default App;\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './Components/App';\n\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}